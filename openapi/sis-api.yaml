openapi: 3.0.1
info:
  title: Smart Insurance System
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: user profile
paths:
  /user/{user_id}:
    get:
      tags:
        - user
      summary: Get a user
      operationId: get_one
      parameters:
        - name: user_id
          in: path
          description: The id of the user to retrieve
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrived user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User doesn't exist
          content: { }
      x-swagger-router-controller: web.controllers.user_controller
    put:
      tags:
        - user
      summary: Update and replace a user
      operationId: update_user
      parameters:
        - name: user_id
          in: path
          description: The id of the user to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: Successfully updated user
          content: { }
        404:
          description: User doesn't exist
          content: { }
      x-swagger-router-controller: web.controllers.user_controller
      x-codegen-request-body-name: User
    delete:
      tags:
        - user
      summary: Remove a user
      operationId: remove_user
      parameters:
        - name: user_id
          in: path
          description: The id of the user to remove
          required: true
          schema:
            type: string
      responses:
        202:
          description: Successfully deleted user
          content: { }
        404:
          description: User doesn't exist
          content: { }
      x-swagger-router-controller: web.controllers.user_controller
  /user/{user_id}/profile:
    get:
      tags:
      - user
      summary: Get a user profile
      operationId: get_one
      parameters:
      - name: user_id
        in: path
        description: The id of the user to retrieve
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully retrived user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        404:
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.profile_controller
    post:
      tags:
        - user
      summary: Create a user profile
      operationId: create_profile
      parameters:
        - name: user_id
          in: path
          description: The id of the user to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        200:
          description: Successfully updated user
          content: { }
        404:
          description: User doesn't exist
          content: { }
      x-swagger-router-controller: web.controllers.profile_controller
      x-codegen-request-body-name: UserProfile
    put:
      tags:
      - user
      summary: Update and replace a user profile
      operationId: update_user
      parameters:
      - name: user_id
        in: path
        description: The id of the user to update
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        200:
          description: Successfully updated user
          content: {}
        404:
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.profile_controller
      x-codegen-request-body-name: User
    delete:
      summary: Remove a user profile
      operationId: remove_profile
      parameters:
      - name: user_id
        in: path
        description: The id of the user to remove
        required: true
        schema:
          type: string
      responses:
        202:
          description: Successfully deleted user
          content: {}
        404:
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.profile_controller
  /user/{user_id}/insurance_package/{package_id}:
    get:
      summary: Gets all packages for a user
      operationId: get_all
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsurancePackage'
      x-swagger-router-controller: controllers.insurance_package_controller
    delete:
      summary: Delete application
      operation_id: delete_package
  /user/{user_id}/insurance_package:
    get:
      summary: Get active packages
      operationId: get_active
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsurancePackages'
    post:
      summary: Create new package
      operationId: create_package
      requestBody:
        description: Package to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsurancePackage'
        required: true
      responses:
        201:
          description: Package Created
          content: { }
      x-swagger-router-controller: web.controllers.insurance_package_controller
      x-codegen-request-body-name: body
components:
  schemas:
    UserProfiles:
      type: array
      items:
        $ref: '#/components/schemas/UserProfile'
    InsurancePackages:
      type: array
      items:
        $ref: '#/components/schemas/InsurancePackage'
    Benifits:
      type: array
      items:
        $ref: '#/components/schemas/Benefit'
    Claims:
      type: array
      items:
        $ref: '#/components/schemas/Claim'
    ClaimHistory:
      type: array
      items:
        $ref: '#/components/schemas/ClaimEvent'
    Attachments:
      type: array
      items:
        $ref: '#/components/schemas/Attachment'

    User:
      required:
        - username
        - email
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        email:
          type: string
          format: email
      example:
        id: 1
        username: bob
        email: bob@bob.bob
    UserProfile:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
        role:
          enum:
            - Member
            - Advisor
        points:
          type: integer
          format: int32
        membership:
          $ref: '#/components/schemas/Membership'
        benifits:
          $ref: '#/components/schemas/Benefits'
        insurance_packages:
          $ref: '#/components/schemas/InsurancePackages'
    Membership:
      properties:
        id:
          type: integer
        user_id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        type:
          enum:
            - Smart
            - Silver
            - Gold
    InsurancePackage:
      properties:
        id:
          type: integer
        user_id:
          type: integer
        type:
          enum:
            - Home
            - Motor
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        claims:
          $ref: '#/components/schemas/Claims'
    Claim:
      properties:
        id:
          type: integer
        package_id:
          type: integer
        claim_date:
          type: string
          format: date-time
        resolution_date:
          type: string
          format: date-time
        summary:
          type: string
        claim_status:
          $ref: '#/components/schemas/ClaimStatus'
        claim_history:
          $ref: '#/components/schemas/ClaimHistory'

    ClaimStatus:
      enum:
        - Rejected
        - Resolved
        - Submitted
        - UnderReview
        - EvidenceRequested
        - AwaitingCustomerApproval
        - Accepted
        - Processing
    ClaimEvent:
      properties:
        id:
          type: integer
        claim_id:
          type: integer
        comment:
          type: string
        created:
          type: integer
        claim_status:
          $ref: '#/components/schemas/ClaimStatus'
        attachments:
          $ref: '#/components/schemas/Attachments'
    Attachment:
      properties:
        claim_event_id:
          type: integer
        name:
          type: string
        mime_type:
          type: string
        data:
          type: string
          format: byte


