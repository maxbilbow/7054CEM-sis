# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api_server.models.base_model_ import Model
from api_server.models.claim_history import ClaimHistory  # noqa: F401,E501
from api_server.models.claim_status import ClaimStatus  # noqa: F401,E501
from api_server import util


class Claim(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, package_id: int=None, timestamp: int=None, incident_date: date=None, resolution_date: int=None, summary: str=None, claim_status: ClaimStatus=None, claim_history: ClaimHistory=None):  # noqa: E501
        """Claim - a model defined in Swagger

        :param id: The id of this Claim.  # noqa: E501
        :type id: int
        :param package_id: The package_id of this Claim.  # noqa: E501
        :type package_id: int
        :param timestamp: The timestamp of this Claim.  # noqa: E501
        :type timestamp: int
        :param incident_date: The incident_date of this Claim.  # noqa: E501
        :type incident_date: date
        :param resolution_date: The resolution_date of this Claim.  # noqa: E501
        :type resolution_date: int
        :param summary: The summary of this Claim.  # noqa: E501
        :type summary: str
        :param claim_status: The claim_status of this Claim.  # noqa: E501
        :type claim_status: ClaimStatus
        :param claim_history: The claim_history of this Claim.  # noqa: E501
        :type claim_history: ClaimHistory
        """
        self.swagger_types = {
            'id': int,
            'package_id': int,
            'timestamp': int,
            'incident_date': date,
            'resolution_date': int,
            'summary': str,
            'claim_status': ClaimStatus,
            'claim_history': ClaimHistory
        }

        self.attribute_map = {
            'id': 'id',
            'package_id': 'package_id',
            'timestamp': 'timestamp',
            'incident_date': 'incident_date',
            'resolution_date': 'resolution_date',
            'summary': 'summary',
            'claim_status': 'claim_status',
            'claim_history': 'claim_history'
        }
        self._id = id
        self._package_id = package_id
        self._timestamp = timestamp
        self._incident_date = incident_date
        self._resolution_date = resolution_date
        self._summary = summary
        self._claim_status = claim_status
        self._claim_history = claim_history

    @classmethod
    def from_dict(cls, dikt) -> 'Claim':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Claim of this Claim.  # noqa: E501
        :rtype: Claim
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Claim.


        :return: The id of this Claim.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Claim.


        :param id: The id of this Claim.
        :type id: int
        """

        self._id = id

    @property
    def package_id(self) -> int:
        """Gets the package_id of this Claim.


        :return: The package_id of this Claim.
        :rtype: int
        """
        return self._package_id

    @package_id.setter
    def package_id(self, package_id: int):
        """Sets the package_id of this Claim.


        :param package_id: The package_id of this Claim.
        :type package_id: int
        """

        self._package_id = package_id

    @property
    def timestamp(self) -> int:
        """Gets the timestamp of this Claim.


        :return: The timestamp of this Claim.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: int):
        """Sets the timestamp of this Claim.


        :param timestamp: The timestamp of this Claim.
        :type timestamp: int
        """

        self._timestamp = timestamp

    @property
    def incident_date(self) -> date:
        """Gets the incident_date of this Claim.


        :return: The incident_date of this Claim.
        :rtype: date
        """
        return self._incident_date

    @incident_date.setter
    def incident_date(self, incident_date: date):
        """Sets the incident_date of this Claim.


        :param incident_date: The incident_date of this Claim.
        :type incident_date: date
        """
        if incident_date is None:
            raise ValueError("Invalid value for `incident_date`, must not be `None`")  # noqa: E501

        self._incident_date = incident_date

    @property
    def resolution_date(self) -> int:
        """Gets the resolution_date of this Claim.


        :return: The resolution_date of this Claim.
        :rtype: int
        """
        return self._resolution_date

    @resolution_date.setter
    def resolution_date(self, resolution_date: int):
        """Sets the resolution_date of this Claim.


        :param resolution_date: The resolution_date of this Claim.
        :type resolution_date: int
        """

        self._resolution_date = resolution_date

    @property
    def summary(self) -> str:
        """Gets the summary of this Claim.


        :return: The summary of this Claim.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary: str):
        """Sets the summary of this Claim.


        :param summary: The summary of this Claim.
        :type summary: str
        """
        if summary is None:
            raise ValueError("Invalid value for `summary`, must not be `None`")  # noqa: E501

        self._summary = summary

    @property
    def claim_status(self) -> ClaimStatus:
        """Gets the claim_status of this Claim.


        :return: The claim_status of this Claim.
        :rtype: ClaimStatus
        """
        return self._claim_status

    @claim_status.setter
    def claim_status(self, claim_status: ClaimStatus):
        """Sets the claim_status of this Claim.


        :param claim_status: The claim_status of this Claim.
        :type claim_status: ClaimStatus
        """

        self._claim_status = claim_status

    @property
    def claim_history(self) -> ClaimHistory:
        """Gets the claim_history of this Claim.


        :return: The claim_history of this Claim.
        :rtype: ClaimHistory
        """
        return self._claim_history

    @claim_history.setter
    def claim_history(self, claim_history: ClaimHistory):
        """Sets the claim_history of this Claim.


        :param claim_history: The claim_history of this Claim.
        :type claim_history: ClaimHistory
        """
        if claim_history is None:
            raise ValueError("Invalid value for `claim_history`, must not be `None`")  # noqa: E501

        self._claim_history = claim_history
