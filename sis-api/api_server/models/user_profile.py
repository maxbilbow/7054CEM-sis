# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.benefits import Benefits  # noqa: F401,E501
from swagger_server.models.insurance_packages import InsurancePackages  # noqa: F401,E501
from swagger_server.models.membership import Membership  # noqa: F401,E501
from swagger_server.models.role import Role  # noqa: F401,E501
from swagger_server import util


class UserProfile(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: int=None, role: Role=None, points: int=None, membership: Membership=None, benifits: Benefits=None, insurance_packages: InsurancePackages=None):  # noqa: E501
        """UserProfile - a model defined in Swagger

        :param user_id: The user_id of this UserProfile.  # noqa: E501
        :type user_id: int
        :param role: The role of this UserProfile.  # noqa: E501
        :type role: Role
        :param points: The points of this UserProfile.  # noqa: E501
        :type points: int
        :param membership: The membership of this UserProfile.  # noqa: E501
        :type membership: Membership
        :param benifits: The benifits of this UserProfile.  # noqa: E501
        :type benifits: Benefits
        :param insurance_packages: The insurance_packages of this UserProfile.  # noqa: E501
        :type insurance_packages: InsurancePackages
        """
        self.swagger_types = {
            'user_id': int,
            'role': Role,
            'points': int,
            'membership': Membership,
            'benifits': Benefits,
            'insurance_packages': InsurancePackages
        }

        self.attribute_map = {
            'user_id': 'user_id',
            'role': 'role',
            'points': 'points',
            'membership': 'membership',
            'benifits': 'benifits',
            'insurance_packages': 'insurance_packages'
        }
        self._user_id = user_id
        self._role = role
        self._points = points
        self._membership = membership
        self._benifits = benifits
        self._insurance_packages = insurance_packages

    @classmethod
    def from_dict(cls, dikt) -> 'UserProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserProfile of this UserProfile.  # noqa: E501
        :rtype: UserProfile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> int:
        """Gets the user_id of this UserProfile.


        :return: The user_id of this UserProfile.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this UserProfile.


        :param user_id: The user_id of this UserProfile.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def role(self) -> Role:
        """Gets the role of this UserProfile.


        :return: The role of this UserProfile.
        :rtype: Role
        """
        return self._role

    @role.setter
    def role(self, role: Role):
        """Sets the role of this UserProfile.


        :param role: The role of this UserProfile.
        :type role: Role
        """

        self._role = role

    @property
    def points(self) -> int:
        """Gets the points of this UserProfile.


        :return: The points of this UserProfile.
        :rtype: int
        """
        return self._points

    @points.setter
    def points(self, points: int):
        """Sets the points of this UserProfile.


        :param points: The points of this UserProfile.
        :type points: int
        """

        self._points = points

    @property
    def membership(self) -> Membership:
        """Gets the membership of this UserProfile.


        :return: The membership of this UserProfile.
        :rtype: Membership
        """
        return self._membership

    @membership.setter
    def membership(self, membership: Membership):
        """Sets the membership of this UserProfile.


        :param membership: The membership of this UserProfile.
        :type membership: Membership
        """

        self._membership = membership

    @property
    def benifits(self) -> Benefits:
        """Gets the benifits of this UserProfile.


        :return: The benifits of this UserProfile.
        :rtype: Benefits
        """
        return self._benifits

    @benifits.setter
    def benifits(self, benifits: Benefits):
        """Sets the benifits of this UserProfile.


        :param benifits: The benifits of this UserProfile.
        :type benifits: Benefits
        """

        self._benifits = benifits

    @property
    def insurance_packages(self) -> InsurancePackages:
        """Gets the insurance_packages of this UserProfile.


        :return: The insurance_packages of this UserProfile.
        :rtype: InsurancePackages
        """
        return self._insurance_packages

    @insurance_packages.setter
    def insurance_packages(self, insurance_packages: InsurancePackages):
        """Sets the insurance_packages of this UserProfile.


        :param insurance_packages: The insurance_packages of this UserProfile.
        :type insurance_packages: InsurancePackages
        """

        self._insurance_packages = insurance_packages
