openapi: 3.0.1
info:
  title: Smart Insurance System
  version: 1.0.0
servers:
- url: /api/v1
tags:
- name: Authorization
- name: User
- name: User Profile
- name: Membership
- name: Insurance Package
- name: Claims
- name: Claim History
- name: Attachments
paths:
  /secret:
    get:
      tags:
      - Authorization
      summary: Return secret string
      operationId: get_secret
      responses:
        "200":
          description: secret response
          content:
            '*/*':
              schema:
                type: string
                x-content-type: '*/*'
      security:
      - api_key: []
      x-openapi-router-controller: swagger_server.controllers.authorization_controller
  /user-id/{email}:
    get:
      tags:
      - User
      summary: Get a user id by email
      operationId: find_by_email
      parameters:
      - name: email
        in: path
        description: The email of the user to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: email
      responses:
        "200":
          description: Successfully retrived user
          content:
            application/json:
              schema:
                type: integer
                x-content-type: application/json
        "404":
          description: User doesn't exist for email
          content: {}
      x-swagger-router-controller: web.controllers.user_controller
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user:
    post:
      tags:
      - User
      summary: Create a user
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.user_controller
      x-codegen-request-body-name: User
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/{user_id}:
    get:
      tags:
      - User
      summary: Get a user
      operationId: get_user
      parameters:
      - name: user_id
        in: path
        description: The id of the user to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.user_controller
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - User
      summary: Update and replace a user
      operationId: update_user
      parameters:
      - name: user_id
        in: path
        description: The id of the user to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: Successfully updated user
          content: {}
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.user_controller
      x-codegen-request-body-name: User
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - User
      summary: Remove a user
      operationId: remove_user
      parameters:
      - name: user_id
        in: path
        description: The id of the user to remove
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "202":
          description: Successfully deleted user
          content: {}
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.user_controller
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /user/{user_id}/profile:
    get:
      tags:
      - User Profile
      summary: Get a user profile
      operationId: get_profile
      parameters:
      - name: user_id
        in: path
        description: The id of the user to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.profile_controller
      x-openapi-router-controller: swagger_server.controllers.user_profile_controller
    put:
      tags:
      - User Profile
      summary: Update and replace a user profile
      operationId: update_profile
      parameters:
      - name: user_id
        in: path
        description: The id of the user to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        "200":
          description: Successfully updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.profile_controller
      x-codegen-request-body-name: User
      x-openapi-router-controller: swagger_server.controllers.user_profile_controller
    post:
      tags:
      - User Profile
      summary: Create a user profile
      operationId: create_profile
      parameters:
      - name: user_id
        in: path
        description: The id of the user to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        "200":
          description: Successfully updated user
          content: {}
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.profile_controller
      x-codegen-request-body-name: UserProfile
      x-openapi-router-controller: swagger_server.controllers.user_profile_controller
    delete:
      tags:
      - User Profile
      summary: Remove a user profile
      operationId: remove_profile
      parameters:
      - name: user_id
        in: path
        description: The id of the user to remove
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "202":
          description: Successfully deleted user
          content: {}
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.profile_controller
      x-openapi-router-controller: swagger_server.controllers.user_profile_controller
  /user/{user_id}/membership:
    get:
      tags:
      - Membership
      summary: Get current active membership for user
      operationId: get_current
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived user's Membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        "404":
          description: Active membership does not exist
          content: {}
      x-openapi-router-controller: swagger_server.controllers.membership_controller
    put:
      tags:
      - Membership
      summary: Update a membership
      operationId: update_membership
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
        required: true
      responses:
        "200":
          description: Successfully updated membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        "404":
          description: User doesn't exist
          content: {}
      x-openapi-router-controller: swagger_server.controllers.membership_controller
    post:
      tags:
      - Membership
      summary: Create new membership
      operationId: create_membership
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
        required: true
      responses:
        "200":
          description: Successfully created a new membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        "404":
          description: User doesn't exist
          content: {}
      x-openapi-router-controller: swagger_server.controllers.membership_controller
    delete:
      tags:
      - Membership
      summary: Cancel the current membership by setting its end_date to today
      operationId: cancel_membership
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully cancelled a membership
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        "404":
          description: User doesn't exist
          content: {}
      x-openapi-router-controller: swagger_server.controllers.membership_controller
  /user/{user_id}/benefits:
    get:
      tags:
      - Membership
      summary: Get all benefits available for a user
      operationId: get_benefits
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived user's benefits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Benefits'
        "404":
          description: User doesn't exist
          content: {}
      x-openapi-router-controller: swagger_server.controllers.membership_controller
  /user/{user_id}/insurance_package:
    get:
      tags:
      - Insurance Package
      summary: Get active packages
      operationId: get_active
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Retrieves all insurance packages for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsurancePackages'
      x-openapi-router-controller: swagger_server.controllers.insurance_package_controller
    put:
      tags:
      - Insurance Package
      summary: Update package
      operationId: update
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Package to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsurancePackage'
        required: true
      responses:
        "201":
          description: Package Created
          content: {}
      x-swagger-router-controller: web.controllers.insurance_package_controller
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.insurance_package_controller
    post:
      tags:
      - Insurance Package
      summary: Create new package
      operationId: create_package
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Package to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsurancePackage'
        required: true
      responses:
        "201":
          description: Package Created
          content: {}
      x-swagger-router-controller: web.controllers.insurance_package_controller
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.insurance_package_controller
  /user/{user_id}/insurance_package/{package_id}:
    get:
      tags:
      - Insurance Package
      summary: Gets all packages for a user
      operationId: get_all
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: package_id
        in: path
        description: The id of the insurance package
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Package retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsurancePackage'
      x-swagger-router-controller: controllers.insurance_package_controller
      x-openapi-router-controller: swagger_server.controllers.insurance_package_controller
    post:
      tags:
      - Claims
      summary: Create a new claim
      operationId: new_claim
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: package_id
        in: path
        description: The id of the package to claim against
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: true
      responses:
        "200":
          description: Successfully retrived user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.claim_controller
      x-openapi-router-controller: swagger_server.controllers.claims_controller
    delete:
      tags:
      - Insurance Package
      summary: Delete application
      operationId: delete_package
      parameters:
      - name: user_id
        in: path
        description: The id of the user to remove
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: package_id
        in: path
        description: The id of the insurance package
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "202":
          description: Successfully deleted package
          content: {}
        "404":
          description: Package doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.insurance_package_controller
      x-openapi-router-controller: swagger_server.controllers.insurance_package_controller
  /user/{user_id}/claim:
    get:
      tags:
      - Claims
      summary: Get all claims for a user
      operationId: get_for_user
      parameters:
      - name: user_id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claims'
        "404":
          description: User doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.claim_controller
      x-openapi-router-controller: swagger_server.controllers.claims_controller
  /package/{package_id}/claim:
    get:
      tags:
      - Claims
      summary: Get all claims for a package
      operationId: get_for_package
      parameters:
      - name: package_id
        in: path
        description: The id of the package
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claims'
        "404":
          description: Package doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.claim_controller
      x-openapi-router-controller: swagger_server.controllers.claims_controller
  /claim/{claim_id}:
    get:
      tags:
      - Claims
      summary: Get all claims for a package
      operationId: get_one
      parameters:
      - name: claim_id
        in: path
        description: The id of the claim
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Claim'
        "404":
          description: Claim doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.claim_controller
      x-openapi-router-controller: swagger_server.controllers.claims_controller
  /claim/{claim_id}/history:
    get:
      tags:
      - Claim History
      summary: Get history for a claim
      operationId: get_history
      parameters:
      - name: claim_id
        in: path
        description: The id of the claim
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimHistory'
        "404":
          description: Claim doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.claim_history_controller
      x-openapi-router-controller: swagger_server.controllers.claim_history_controller
    post:
      tags:
      - Claim History
      summary: Add note
      operationId: add_note
      parameters:
      - name: claim_id
        in: path
        description: The id of the claim
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimNote'
        required: true
      responses:
        "200":
          description: Successfully added note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimNote'
        "404":
          description: Claim item doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.claim_history_controller
      x-openapi-router-controller: swagger_server.controllers.claim_history_controller
  /claim-history/{note_id}:
    get:
      tags:
      - Claim History
      summary: Get claim note
      operationId: get_note
      parameters:
      - name: note_id
        in: path
        description: The id of the history item
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimNote'
        "404":
          description: History item doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.claim_history_controller
      x-openapi-router-controller: swagger_server.controllers.claim_history_controller
  /attachments/{attachment_id}:
    get:
      tags:
      - Attachments
      summary: Download attachment
      operationId: get_attachment
      parameters:
      - name: attachment_id
        in: path
        description: The id of the attachment
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrived claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
        "404":
          description: Attachment item doesn't exist
          content: {}
      x-swagger-router-controller: web.controllers.attachment_controller
      x-openapi-router-controller: swagger_server.controllers.attachments_controller
components:
  schemas:
    InsurancePackages:
      type: array
      items:
        $ref: '#/components/schemas/InsurancePackage'
    Benefits:
      type: array
      items:
        $ref: '#/components/schemas/Benefit'
    Claims:
      type: array
      items:
        $ref: '#/components/schemas/Claim'
    ClaimHistory:
      type: array
      items:
        $ref: '#/components/schemas/ClaimNote'
    Attachments:
      type: array
      items:
        $ref: '#/components/schemas/Attachment'
    User:
      required:
      - email
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        password_hash:
          type: string
      example:
        password_hash: bob
        email: bob@bob.bob
    UserProfile:
      type: object
      properties:
        user_id:
          type: integer
        name:
          type: string
        role:
          $ref: '#/components/schemas/Role'
        points:
          type: integer
        membership:
          $ref: '#/components/schemas/Membership'
      example:
        role: Member
        user_id: 0
        name: name
        membership:
          end_date: 2000-01-23
          user_id: 5
          id: 1
          type: Smart
          start_date: 2000-01-23
        points: 6
    Membership:
      required:
      - end_date
      - start_date
      - type
      properties:
        id:
          type: integer
        user_id:
          type: integer
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        type:
          $ref: '#/components/schemas/MembershipType'
      example:
        end_date: 2000-01-23
        user_id: 5
        id: 1
        type: Smart
        start_date: 2000-01-23
    InsurancePackage:
      properties:
        id:
          type: integer
        user_id:
          type: integer
        type:
          $ref: '#/components/schemas/InsurancePackageType'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      example:
        end_date: 2000-01-23
        user_id: 6
        id: 0
        type: Home
        start_date: 2000-01-23
    Claim:
      required:
      - claim_history
      - incident_date
      - summary
      properties:
        id:
          type: integer
        package_id:
          type: integer
        timestamp:
          type: integer
        incident_date:
          type: string
          format: date
        resolution_date:
          type: integer
        summary:
          type: string
        claim_status:
          $ref: '#/components/schemas/ClaimStatus'
        claim_history:
          $ref: '#/components/schemas/ClaimHistory'
      example:
        summary: summary
        claim_status: Submitted
        incident_date: 2000-01-23
        resolution_date: 5
        claim_history:
        - attachments:
          - data: ""
            claim_note_id: 9
            mime_type: mime_type
            name: name
          - data: ""
            claim_note_id: 9
            mime_type: mime_type
            name: name
          claim_status: null
          created: 7
          claim_id: 2
          comment: comment
          id: 5
        - attachments:
          - data: ""
            claim_note_id: 9
            mime_type: mime_type
            name: name
          - data: ""
            claim_note_id: 9
            mime_type: mime_type
            name: name
          claim_status: null
          created: 7
          claim_id: 2
          comment: comment
          id: 5
        id: 0
        package_id: 6
        timestamp: 1
    ClaimNote:
      properties:
        id:
          type: integer
        claim_id:
          type: integer
        comment:
          type: string
        created:
          type: integer
        claim_status:
          $ref: '#/components/schemas/ClaimStatus'
        attachments:
          $ref: '#/components/schemas/Attachments'
      example:
        attachments:
        - data: ""
          claim_note_id: 9
          mime_type: mime_type
          name: name
        - data: ""
          claim_note_id: 9
          mime_type: mime_type
          name: name
        claim_status: null
        created: 7
        claim_id: 2
        comment: comment
        id: 5
    Attachment:
      required:
      - data
      - mime_type
      - name
      properties:
        claim_note_id:
          type: integer
        name:
          type: string
        mime_type:
          type: string
        data:
          type: string
          format: byte
      example:
        data: ""
        claim_note_id: 9
        mime_type: mime_type
        name: name
    Benefit:
      required:
      - min_membership
      - name
      properties:
        name:
          type: string
        min_membership:
          $ref: '#/components/schemas/MembershipType'
        max_membership:
          $ref: '#/components/schemas/MembershipType'
      example:
        max_membership: null
        name: name
        min_membership: Smart
    MembershipType:
      type: string
      enum:
      - Smart
      - Silver
      - Gold
    InsurancePackageType:
      type: string
      enum:
      - Home
      - Motor
    Role:
      type: string
      enum:
      - Member
      - Advisor
    ClaimStatus:
      type: string
      enum:
      - Submitted
      - UnderReview
      - EvidenceRequested
      - AwaitingCustomerApproval
      - Accepted
      - Processing
      - Resolved
      - Rejected
    inline_response_200:
      properties:
        user_id:
          type: integer
      example:
        user_id: 0
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Auth
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_api_key

